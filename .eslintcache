[{"D:\\html\\react\\getting-started\\src\\index.js":"1","D:\\html\\react\\getting-started\\src\\App.js":"2","D:\\html\\react\\getting-started\\src\\reportWebVitals.js":"3","D:\\html\\react\\getting-started\\src\\components\\Form.js":"4","D:\\html\\react\\getting-started\\src\\components\\Todolist.js":"5","D:\\html\\react\\getting-started\\src\\components\\Todo.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":1854,"mtime":1104525023382,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":1287,"mtime":1104522048719,"results":"11","hashOfConfig":"8"},{"size":636,"mtime":1104522702961,"results":"12","hashOfConfig":"8"},{"size":836,"mtime":1104522647804,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"w0ksrd",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"D:\\html\\react\\getting-started\\src\\index.js",[],["28","29"],"D:\\html\\react\\getting-started\\src\\App.js",["30"],"import React, {useState,useEffect} from \"react\";\nimport './App.css';\n//import components\nimport Form from './components/Form';\nimport Todolist from './components/Todolist';\n\nfunction App() {\n\n//useStates\nconst [Input, setInput] = useState(\"\");\nconst [Todo, setTodo] = useState([]);\nconst [status, setStatus] = useState(\"all\");\nconst [filteredTodo, setFilteredTodo] = useState([]);\n\n//useEffect for status & ssave to local storage\nuseEffect( () => {\n  filteredTodoHandler();\n  saveToLocal();\n}, [Todo, status] );\n//useEffect for getting items from local storage\nuseEffect(() => {\n  getFromLocal();\n}, []);\n//save to localStorage\nconst saveToLocal = () => {\n  localStorage.setItem(\"Todos\", JSON.stringify(Todo));\n}\n//retrive from local storage\nconst getFromLocal = () => {\n  if(localStorage.getItem(\"Todos\") === null) {\n    localStorage.setItem(\"Todos\",JSON.stringify([]));\n  } else {\n    let storageItems = JSON.parse(localStorage.getItem(\"Todos\"));\n    setFilteredTodo(storageItems);\n  }\n}\nconst filteredTodoHandler = () => {\n    switch (status) {\n        case \"checked\":\n            setFilteredTodo( Todo.filter( (item) => item.checked === true ) );\n            break;\n        case \"yet to be done\":\n            setFilteredTodo( Todo.filter( (item) => item.checked === false ) );\n            break;\n        default:\n            setFilteredTodo(Todo);\n    }\n}\n  return (\n    <div className=\"App\">\n        <h1>TODO list</h1>\n        <Form \n            Input= {Input} \n            setInput= {setInput}\n            Todo= {Todo}\n            setTodo= {setTodo} \n            setStatus= {setStatus} \n            status= {status} \n            setFilteredTodo= {setFilteredTodo}       \n        />\n        <Todolist \n            Todo= {Todo}\n            setTodo= {setTodo}\n            filteredTodo= {filteredTodo}\n        />\n    </div>\n  );\n}\n\nexport default App;\n","D:\\html\\react\\getting-started\\src\\reportWebVitals.js",[],"D:\\html\\react\\getting-started\\src\\components\\Form.js",[],"D:\\html\\react\\getting-started\\src\\components\\Todolist.js",[],"D:\\html\\react\\getting-started\\src\\components\\Todo.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":19,"column":4,"nodeType":"37","endLine":19,"endColumn":18,"suggestions":"38"},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'filteredTodoHandler' and 'saveToLocal'. Either include them or remove the dependency array.","ArrayExpression",["41"],"no-global-assign","no-unsafe-negation",{"desc":"42","fix":"43"},"Update the dependencies array to be: [Todo, filteredTodoHandler, saveToLocal, status]",{"range":"44","text":"45"},[494,508],"[Todo, filteredTodoHandler, saveToLocal, status]"]