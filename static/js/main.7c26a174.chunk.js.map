{"version":3,"sources":["components/Form.js","components/Todo.js","components/Todolist.js","App.js","index.js"],"names":["Form","Input","setInput","Todo","setTodo","setStatus","status","setFilteredTodo","className","id","value","onChange","e","target","type","name","onClick","preventDefault","text","checked","Math","random","each","map","item","filter","eachOne","Todolist","props","filteredTodo","App","useState","useEffect","filteredTodoHandler","saveToLocal","getFromLocal","localStorage","setItem","JSON","stringify","getItem","storageItems","parse","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7c26a174.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Form = ({Input, setInput, Todo, setTodo, setStatus, status, setFilteredTodo}) => {\r\n\r\nconst inputHandler = (e) => {\r\n  setInput(e.target.value);\r\n};\r\nconst addHandler = (e) => {\r\n  e.preventDefault();\r\n  setTodo([\r\n    ...Todo, \r\n    {text: Input, checked: false, id: Math.random()*1000}\r\n  ]);\r\n  setInput(\"\");\r\n};\r\nconst statusHandler = (e) => {\r\n    setStatus(e.target.value);\r\n}\r\n    return(\r\n        <div className= \"todolist-container\">\r\n            <div className= \"input-container\">\r\n                <h3>Please enter item to add</h3>\r\n                <form id=\"input-form\">\r\n                    <input value={Input} onChange= {inputHandler} type=\"text\" name=\"input\" id=\"input-item\"></input>\r\n                    <button onClick= {addHandler} id=\"input-btn\">+</button>\r\n                </form>\r\n            </div>\r\n            <div className= \"status-container\">\r\n                <select onChange= {statusHandler} name=\"status\" className=\"select-status\">\r\n                    <option value=\"all\">All</option>\r\n                    <option value=\"checked\">checked</option>\r\n                    <option value=\"yet to be done\">yet to be done</option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\n\r\nconst Todo = ( {text, Todo, setTodo, each} ) => {\r\n\r\nconst checkBtnHandler = () => {\r\n    setTodo(\r\n        Todo.map( (item) => {\r\n            if(item.id === each.id) {\r\n                return{\r\n                    ...item, \r\n                    checked: !item.checked, \r\n                };\r\n            } return item;\r\n        } )\r\n    );\r\n};    \r\nconst deleteBtnHandler = () => {\r\n    setTodo(Todo.filter( (eachOne) => each.id !== eachOne.id ));\r\n};\r\n    return(\r\n        <div className= {`todo-div ${each.checked ? \"checked\" : \"\"}`}>\r\n            <div className= \"todo-item\">{text}</div>\r\n            <button onClick= {checkBtnHandler} className= \"check-btn\">-</button>\r\n            <button onClick= {deleteBtnHandler} className= \"trash-btn\">X</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Todo;","import React from 'react';\r\n\r\n//import Todo\r\nimport Todo from './Todo';\r\n\r\nconst Todolist = (props) => {\r\n    return(\r\n        <div id=\"todo-list\">\r\n            <ul className=\"list\" id=\"todo-items\">\r\n                {props.filteredTodo.map( (each) => (                    \r\n                    <Todo \r\n                        text= {each.text} \r\n                        key= {each.id}\r\n                        each= {each}\r\n                        Todo= {props.Todo} \r\n                        setTodo= {props.setTodo}\r\n                    />\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Todolist;","import React, {useState,useEffect} from \"react\";\nimport './App.css';\n//import components\nimport Form from './components/Form';\nimport Todolist from './components/Todolist';\n\nfunction App() {\n\n//useStates\nconst [Input, setInput] = useState(\"\");\nconst [Todo, setTodo] = useState([]);\nconst [status, setStatus] = useState(\"all\");\nconst [filteredTodo, setFilteredTodo] = useState([]);\n\n//useEffect for status & ssave to local storage\nuseEffect( () => {\n  filteredTodoHandler();\n  saveToLocal();\n}, [Todo, status] );\n//useEffect for getting items from local storage\nuseEffect(() => {\n  getFromLocal();\n}, []);\n//save to localStorage\nconst saveToLocal = () => {\n  localStorage.setItem(\"Todos\", JSON.stringify(Todo));\n}\n//retrive from local storage\nconst getFromLocal = () => {\n  if(localStorage.getItem(\"Todos\") === null) {\n    localStorage.setItem(\"Todos\",JSON.stringify([]));\n  } else {\n    let storageItems = JSON.parse(localStorage.getItem(\"Todos\"));\n    setFilteredTodo(storageItems);\n  }\n}\nconst filteredTodoHandler = () => {\n    switch (status) {\n        case \"checked\":\n            setFilteredTodo( Todo.filter( (item) => item.checked === true ) );\n            break;\n        case \"yet to be done\":\n            setFilteredTodo( Todo.filter( (item) => item.checked === false ) );\n            break;\n        default:\n            setFilteredTodo(Todo);\n    }\n}\n  return (\n    <div className=\"App\">\n        <h1>TODO list</h1>\n        <Form \n            Input= {Input} \n            setInput= {setInput}\n            Todo= {Todo}\n            setTodo= {setTodo} \n            setStatus= {setStatus} \n            status= {status} \n            setFilteredTodo= {setFilteredTodo}       \n        />\n        <Todolist \n            Todo= {Todo}\n            setTodo= {setTodo}\n            filteredTodo= {filteredTodo}\n        />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}